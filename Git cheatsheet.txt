//when we create a project, initilize locally
git init		

//change the remote to main and than push (from the cmd)
git remote add origin ${URLforGITHUBrepo}
git branch -M main
git push -u origin main	//set the origin


//than for every push from the cmd (OR USE THE VSCODE INTERFACE)
git add .
git commit -m "message"
git push

//USE THE VSCODE INTERFACE, from the vscode source section by staging, commit and than push.


//adding git ignore (IMPORTANT)
1. create a file called ".gitignore" iniside your project.
2. add into it the folder names which you want the staging(commits) to ignore.


//Branching:
branching workflow:
    1.Branch out
    2.Develop feature in new branch
    3.Merge changes back into master
This kind of merge is called a fast forward merge

//There are five commands we need to know in order to use git branching on a solo project:
git branch
git checkout -b branch-name
git push origin branch-name_
git checkout branch-name
git merge branch-name
git branch -d "branch-name"
git push origin --delete "branch-name"

//Create a new branch.
git checkout -b "branch-name"

Letâ€™s break this down:
git - you know this
checkout - this is the word that means to go into a different branch. You checkout the branch you want to see. Think of it like "check-it-out". You want to go to a new branch? Go check(it)out!
-b - this means "new", a new branch
new-feature - this is the name of the new branch. Since you generally branch out for a new feature or bug fix, the branch name should be self descriptive
Note: branch names cannot have a space in them and are case sensitive
Generally, a branch would be named something like bug-fix/db-save or feature/handle-multiple-users
Of course, the naming conventions will depend on the team you work with


//merging branches:
git merge "branch-name"
(after we are back in our master branch, we can run git merge new-feature merging our commits from new feature, into our master branch.)

//Deleting a branch when done:
git branch -d "branch-name"
(deleting it locally)
//to force deltion use -d
git push origin --delete "branch-name"
(delete it remotely)

**Note: you must switch to another branch before deleting. 